{"ast":null,"code":"import axios from 'axios';\n\n// Create axios instance with base URL\nconst api = axios.create({\n  baseURL: process.env.NODE_ENV === 'production' ? '/api' // Production - API on same domain\n  : 'http://localhost:5000/api',\n  // Development - API on different port\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  }\n});\n\n// Request interceptor for adding auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor for handling common errors\napi.interceptors.response.use(response => {\n  return response;\n}, error => {\n  // Handle 401 Unauthorized responses by redirecting to login\n  if (error.response && error.response.status === 401) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n\n    // Only redirect if not already on login page\n    if (!window.location.pathname.includes('/login')) {\n      window.location.href = '/login';\n    }\n  }\n\n  // Handle DynamoDB specific errors\n  if (error.response && error.response.data && error.response.data.message) {\n    // Log the detailed error for debugging\n    console.error('API Error:', error.response.data);\n  }\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","NODE_ENV","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","error","Promise","reject","response","status","removeItem","window","location","pathname","includes","href","data","message","console"],"sources":["/Users/sudipdas/Desktop/AST-test/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Create axios instance with base URL\nconst api = axios.create({\n  baseURL: process.env.NODE_ENV === 'production' \n    ? '/api'  // Production - API on same domain\n    : 'http://localhost:5000/api', // Development - API on different port\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  }\n});\n\n// Request interceptor for adding auth token\napi.interceptors.request.use(\n  config => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers['Authorization'] = `Bearer ${token}`;\n    }\n    return config;\n  },\n  error => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor for handling common errors\napi.interceptors.response.use(\n  response => {\n    return response;\n  },\n  error => {\n    // Handle 401 Unauthorized responses by redirecting to login\n    if (error.response && error.response.status === 401) {\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      \n      // Only redirect if not already on login page\n      if (!window.location.pathname.includes('/login')) {\n        window.location.href = '/login';\n      }\n    }\n\n    // Handle DynamoDB specific errors\n    if (error.response && error.response.data && error.response.data.message) {\n      // Log the detailed error for debugging\n      console.error('API Error:', error.response.data);\n    }\n    \n    return Promise.reject(error);\n  }\n);\n\nexport default api;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAC1C,MAAM,CAAE;EAAA,EACR,2BAA2B;EAAE;EACjCC,OAAO,EAAE,KAAK;EACdC,OAAO,EAAE;IACP,cAAc,EAAE,kBAAkB;IAClC,QAAQ,EAAE;EACZ;AACF,CAAC,CAAC;;AAEF;AACAP,GAAG,CAACQ,YAAY,CAACC,OAAO,CAACC,GAAG,CAC1BC,MAAM,IAAI;EACR,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUK,KAAK,EAAE;EACrD;EACA,OAAOD,MAAM;AACf,CAAC,EACDI,KAAK,IAAI;EACP,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAf,GAAG,CAACQ,YAAY,CAACU,QAAQ,CAACR,GAAG,CAC3BQ,QAAQ,IAAI;EACV,OAAOA,QAAQ;AACjB,CAAC,EACDH,KAAK,IAAI;EACP;EACA,IAAIA,KAAK,CAACG,QAAQ,IAAIH,KAAK,CAACG,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;IACnDN,YAAY,CAACO,UAAU,CAAC,OAAO,CAAC;IAChCP,YAAY,CAACO,UAAU,CAAC,MAAM,CAAC;;IAE/B;IACA,IAAI,CAACC,MAAM,CAACC,QAAQ,CAACC,QAAQ,CAACC,QAAQ,CAAC,QAAQ,CAAC,EAAE;MAChDH,MAAM,CAACC,QAAQ,CAACG,IAAI,GAAG,QAAQ;IACjC;EACF;;EAEA;EACA,IAAIV,KAAK,CAACG,QAAQ,IAAIH,KAAK,CAACG,QAAQ,CAACQ,IAAI,IAAIX,KAAK,CAACG,QAAQ,CAACQ,IAAI,CAACC,OAAO,EAAE;IACxE;IACAC,OAAO,CAACb,KAAK,CAAC,YAAY,EAAEA,KAAK,CAACG,QAAQ,CAACQ,IAAI,CAAC;EAClD;EAEA,OAAOV,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAef,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/sudipdas/Desktop/AST-test/frontend/src/contexts/AuthContext.js\";\nimport React, { createContext, useState, useEffect } from 'react';\nimport api from '../services/api';\nexport const AuthContext = createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Check if user is logged in on page load\n    const username = localStorage.getItem('username');\n    if (username) {\n      fetchCurrentUser(username);\n    } else {\n      setLoading(false);\n    }\n  }, []);\n  const fetchCurrentUser = async username => {\n    try {\n      const response = await axios.post('/api/user', {\n        username\n      });\n      setCurrentUser(response.data);\n    } catch (error) {\n      console.error('Error fetching current user:', error);\n      localStorage.removeItem('username');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const login = async (username, password) => {\n    try {\n      // FormData format for legacy Flask login endpoint\n      const formData = new URLSearchParams();\n      formData.append('username', username);\n      formData.append('password', password);\n      const response = await api.post('/auth/login', formData, {\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        }\n      });\n      if (response.data && response.data.token) {\n        localStorage.setItem('token', response.data.token);\n        localStorage.setItem('user', JSON.stringify(response.data.user));\n        setCurrentUser(response.data.user);\n        return true;\n      }\n      return false;\n    } catch (error) {\n      console.error('Login error:', error);\n      return false;\n    }\n  };\n  const logout = async () => {\n    try {\n      await api.post('/auth/logout');\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      setCurrentUser(null);\n      return true;\n    } catch (error) {\n      console.error('Logout error:', error);\n      // Still remove items on error\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      setCurrentUser(null);\n      return false;\n    }\n  };\n  const value = {\n    currentUser,\n    login,\n    logout,\n    loading\n  };\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, children);\n};","map":{"version":3,"names":["React","createContext","useState","useEffect","api","AuthContext","AuthProvider","children","currentUser","setCurrentUser","loading","setLoading","username","localStorage","getItem","fetchCurrentUser","response","axios","post","data","error","console","removeItem","login","password","formData","URLSearchParams","append","headers","token","setItem","JSON","stringify","user","logout","value","createElement","Provider","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/sudipdas/Desktop/AST-test/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport api from '../services/api';\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  \n  useEffect(() => {\n    // Check if user is logged in on page load\n    const username = localStorage.getItem('username');\n    if (username) {\n      fetchCurrentUser(username);\n    } else {\n      setLoading(false);\n    }\n  }, []);\n  \n  const fetchCurrentUser = async (username) => {\n    try {\n      const response = await axios.post('/api/user', { username });\n      setCurrentUser(response.data);\n    } catch (error) {\n      console.error('Error fetching current user:', error);\n      localStorage.removeItem('username');\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  const login = async (username, password) => {\n    try {\n      // FormData format for legacy Flask login endpoint\n      const formData = new URLSearchParams();\n      formData.append('username', username);\n      formData.append('password', password);\n\n      const response = await api.post('/auth/login', formData, {\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        }\n      });\n      \n      if (response.data && response.data.token) {\n        localStorage.setItem('token', response.data.token);\n        localStorage.setItem('user', JSON.stringify(response.data.user));\n        setCurrentUser(response.data.user);\n        return true;\n      }\n      return false;\n    } catch (error) {\n      console.error('Login error:', error);\n      return false;\n    }\n  };\n  \n  const logout = async () => {\n    try {\n      await api.post('/auth/logout');\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      setCurrentUser(null);\n      return true;\n    } catch (error) {\n      console.error('Logout error:', error);\n      // Still remove items on error\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      setCurrentUser(null);\n      return false;\n    }\n  };\n  \n  const value = {\n    currentUser,\n    login,\n    logout,\n    loading\n  };\n  \n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}